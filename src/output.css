/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
@import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,100..800;1,100..800&display=swap');
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-500: #f64a4a;
    --color-orange-400: #fb7c58;
    --color-yellow-300: #f8cd65;
    --color-green-200: #a4ffaf;
    --color-black: #000000;
    --color-white: #FFFFFF;
    --spacing: 8px;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-grey-200: #e6e5ea;
    --color-grey-600: #817d92;
    --color-grey-700: #54535b;
    --color-grey-800: #24232c;
    --color-grey-850: #18171f;
    --color-grey-900: #14131b;
    --color-grey-950: #08070b;
    --font-jet-brains: 'JetBrains Mono', monospace;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .static {
    position: static;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .table {
    display: table;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .flex-row {
    flex-direction: row;
  }
  .items-center {
    align-items: center;
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .text-preset-1 {
    font-size: 32px;
    line-height: 43px;
    letter-spacing: 0px;
    font-weight: 700;
  }
  .text-preset-3 {
    font-size: 18px;
    line-height: 24px;
    letter-spacing: 0px;
    font-weight: 700;
  }
  .text-preset-4 {
    font-size: 16px;
    line-height: 20px;
    letter-spacing: 0px;
    font-weight: 700;
  }
  .text-green-200 {
    color: var(--color-green-200);
  }
  .text-grey-200 {
    color: var(--color-grey-200);
  }
  .text-grey-600 {
    color: var(--color-grey-600);
  }
  .lowercase {
    text-transform: lowercase;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .md\:text-preset-2 {
    @media (width >= 768px) {
      font-size: 24px;
      line-height: 32px;
      letter-spacing: 0px;
      font-weight: 700;
    }
  }
  .md\:text-preset-3 {
    @media (width >= 768px) {
      font-size: 18px;
      line-height: 24px;
      letter-spacing: 0px;
      font-weight: 700;
    }
  }
}
@layer base {
  body {
    display: flex;
    min-height: 100vh;
    flex-direction: column;
    align-items: center;
    background-color: var(--color-grey-950);
    font-family: var(--font-jet-brains);
    color: var(--color-white);
  }
  ul {
    display: flex;
    flex-direction: column;
    gap: calc(var(--spacing) * 2);
    li {
      display: flex;
      flex-direction: row;
      align-items: center;
      gap: calc(var(--spacing) * 3);
      label {
        font-size: 16px;
        line-height: 20px;
        letter-spacing: 0px;
        font-weight: 700;
        color: var(--color-grey-200);
        @media (width >= 768px) {
          font-size: 18px;
          line-height: 24px;
          letter-spacing: 0px;
          font-weight: 700;
        }
      }
      input[type="checkbox"] {
        height: 20px;
        width: 20px;
        cursor: pointer;
        appearance: none;
        border-style: var(--tw-border-style);
        border-width: 2px;
        border-color: var(--color-grey-200);
        background-color: transparent;
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
        --tw-duration: 150ms;
        transition-duration: 150ms;
        --tw-ease: var(--ease-in-out);
        transition-timing-function: var(--ease-in-out);
      }
      input[type="checkbox"]:checked {
        border-color: var(--color-green-200);
        background-color: var(--color-green-200);
        background-image: url("./assets/images/icon-check.svg");
        background-repeat: no-repeat;
        background-position: center;
        background-size: 60%;
      }
    }
  }
  button {
    display: flex;
    cursor: pointer;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: calc(var(--spacing) * 2);
    background-color: var(--color-green-200);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 3);
    font-size: 16px;
    line-height: 20px;
    letter-spacing: 0px;
    font-weight: 700;
    color: var(--color-grey-800);
    &:hover {
      @media (hover: hover) {
        border-style: var(--tw-border-style);
        border-width: 2px;
      }
    }
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-green-200);
      }
    }
    &:hover {
      @media (hover: hover) {
        background-color: transparent;
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-200);
      }
    }
    &:disabled {
      cursor: not-allowed;
    }
    &:disabled {
      border-style: var(--tw-border-style);
      border-width: 2px;
    }
    &:disabled {
      border-color: var(--color-grey-600);
    }
    &:disabled {
      background-color: transparent;
    }
    &:disabled {
      color: var(--color-grey-600);
    }
    @media (width >= 768px) {
      gap: calc(var(--spacing) * 3);
    }
    @media (width >= 768px) {
      font-size: 18px;
      line-height: 24px;
      letter-spacing: 0px;
      font-weight: 700;
    }
    @media (width >= 1440px) {
      gap: calc(var(--spacing) * 4);
    }
  }
  input[type="range"] {
    width: 100%;
    cursor: pointer;
    appearance: none;
    --thumb-size: 28px;
    --track-height: 8px;
    --value-percent-js: 0%;
    height: var(--track-height);
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
    background-image: linear-gradient(90deg, var(--color-green-200) var(--value-percent-js), var(--color-grey-900) var(--value-percent-js));
    background-size: 100% var(--track-height);
    background-position: 0 center;
    background-repeat: no-repeat;
    border-radius: calc(var(--tack-height) / 2);
  }
  input[type="range"]::-webkit-slider-runnable-track {
    height: var(--track-height);
    width: 100%;
    border-radius: calc(infinity * 1px);
  }
  input[type="range"]::-webkit-slider-thumb {
    height: var(--thumb-size);
    width: var(--thumb-size);
    appearance: none;
    border-radius: calc(infinity * 1px);
    background-color: var(--color-grey-200);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 150ms;
    transition-duration: 150ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    margin-top: calc((var(--track-height) - var(--thumb-size)) / 2);
  }
}
@layer components {
  .content-layout {
    margin-top: calc(var(--spacing) * 10);
    display: flex;
    width: 100%;
    max-width: 540px;
    flex-direction: column;
    gap: calc(var(--spacing) * 2);
    padding: calc(var(--spacing) * 2);
  }
  .header {
    text-align: center;
    font-size: 16px;
    line-height: 20px;
    letter-spacing: 0px;
    font-weight: 700;
    color: var(--color-grey-600);
  }
  .password-output-text {
    font-size: 24px;
    line-height: 32px;
    letter-spacing: 0px;
    font-weight: 700;
    color: var(--color-grey-700);
    &[data-generated="true"] {
      color: var(--color-grey-200);
    }
  }
  .content-box {
    background-color: var(--color-grey-800);
    padding: calc(var(--spacing) * 2);
    .primary-layout {
      display: flex;
      flex-direction: column;
      gap: calc(var(--spacing) * 4);
    }
    .row-element {
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: space-between;
    }
    .row-element > *:last-child {
      &:last-child {
        color: var(--color-green-200);
      }
    }
    .strength-output-box {
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: space-between;
      background-color: var(--color-grey-850);
      padding-inline: calc(var(--spacing) * 4);
      padding-block: calc(var(--spacing) * 3);
      .strength-bars {
        display: flex;
        flex-direction: row;
        gap: calc(var(--spacing) * 1);
        .strength-bar {
          --active-fill: transparent;
          height: 28px;
          width: 10px;
          border-style: var(--tw-border-style);
          border-width: 2px;
          border-color: var(--color-grey-200);
          background-color: var(--active-fill);
          &[data-active="true"] {
            --tw-border-style: none;
            border-style: none;
          }
        }
      }
    }
  }
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-outline-style: solid;
      --tw-border-style: solid;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}
